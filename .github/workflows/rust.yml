"on":
  push:
    branches:
      - "*"
  pull_request: null

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: "${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}"
      - uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: "${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}"
      - uses: actions/cache@v3
        with:
          path: target
          key: "${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}"
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        include:
          - os: macos-latest
          - os: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: "${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}"
      - uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: "${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}"
      - uses: actions/cache@v3
        with:
          path: target
          key: "${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}"
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test

  lints:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: "${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}"
      - uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: "${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}"
      - uses: actions/cache@v3
        with:
          path: target
          key: "${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}"
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: "rustfmt, clippy"
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: "--all -- --check"
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: "-- -D warnings"

  version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          lfs: true
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - id: get_previous_version
        run: |
          echo ::set-output name=PREVIOUS_VERSION::$(git describe --tags "$(git rev-list --tags --max-count=1)")
        shell: bash
      - id: semvers
        uses: WyriHaximus/github-action-next-semvers@master
        with:
          version: "${{ steps.get_previous_version.outputs.PREVIOUS_VERSION }}"
      - run: mkdir -p ./version
      - run: echo "${{ steps.semvers.outputs.v_patch }}" > ./version/version
      - uses: actions/upload-artifact@v4
        with:
          name: version
          path: ./version/version

  build:
    needs:
      - version
      - lints
      - test
      - check
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@master
        with:
          lfs: true
      - uses: actions/download-artifact@v4
        with:
          name: version
      - id: get_version
        run: echo ::set-output name=VERSION::$(cat version)
        shell: bash
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: "--release"
      - name: Rename Binaries
        run: |
          mv target/release/awscloud_sso awscloud_sso-${{ matrix.target }}
      - uses: actions/upload-artifact@v4
        with:
          name: awscloud_sso-${{ matrix.target }}
          path: awscloud_sso-${{ matrix.target }}
          retention-days: 5
          compression-level: 0

  release:
    if: github.ref == 'refs/heads/main'
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          lfs: true
      - uses: actions/download-artifact@v4
        with:
          name: awscloud_sso-x86_64-unknown-linux-gnu
          path: .
      - uses: actions/download-artifact@v4
        with:
          name: awscloud_sso-x86_64-apple-darwin
          path: .
      - name: Set Executable Permissions
        run: chmod +x awscloud_sso-*
      - name: Fetch Version for Tag
        run: echo "VERSION=$(cat version)" >> $GITHUB_ENV
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./awscloud_sso-x86_64-unknown-linux-gnu
            ./awscloud_sso-x86_64-apple-darwin
          tag_name: "${{ env.VERSION }}"
          name: "Release ${{ env.VERSION }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
